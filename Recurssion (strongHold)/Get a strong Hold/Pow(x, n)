https://leetcode.com/problems/powx-n/description/


class Solution:
    def myPow(self, x: float, n: int) -> float:
        ans = 1.0
        nn = n
        if nn<0:
            nn=-1*nn
        
        while nn > 0:
            if nn%2:
                ans = ans*x
                nn=nn-1
            else:
                x=x*x
                nn=nn/2
        
        if n<0:
            ans = 1/ans
        return ans
................................................................

class Solution:
    def myPow(self, x: float, n: int) -> float:
        def pw(x,n):
            if n <= 0:
                return 1
            if n==1:
                return x
            
            if n%2==0:
                return pw(x*x,n//2)
            
            return x*pw(x,n-1)
        nn = n
        if nn<0:
            nn=-1*n
        ans = pw(x,nn)
        if n<0:
            ans=1/ans
        return ans

