
https://leetcode.com/problems/valid-palindrome/


class Solution(object):
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        """
        i = 0
        j = len(s)-1
        b = True
        while i < j:
            if not s[i].isalnum():
                i+=1
                continue
            if not s[j].isalnum():
                j-=1
                continue
            
            if s[i].lower() != s[j].lower():
                b = False
                break
            i+=1
            j-=1
        return b

#using recurion
class Solution(object):
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        """
        i = 0
        j = len(s)-1
        def palin(s,k, m):
            if k >= m:
                return True
            if not s[k].isalnum():
                k+=1
            elif not s[m].isalnum():
                m-=1
            elif s[k].lower() != s[m].lower():
                return False
            else:
                k+=1
                m-=1
            
            return palin(s,k,m)

        return palin(s,i,j)
            



